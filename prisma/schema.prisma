generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(uuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

enum Role {
    User
    Admin
    Vendor
}

model Session {
    id           String   @id @default(uuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum VendorInvitationStatus {
    Pending
    Accepted
    Rejected
}

model VendorProfile {
    id String @id @default(uuid())

    companyName String
    taxNumber   String
    address     String
    country     String
    city        String
    state       String
    zipCode     String

    User   User?   @relation(fields: [userId], references: [id])
    userId String? @unique
}

model VendorInvitation {
    id String @id @default(uuid())

    email String @unique
    token String

    status VendorInvitationStatus @default(Pending)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id            String    @id @default(uuid())
    name          String?
    email         String?   @unique
    password      String?
    emailVerified DateTime?
    image         String?

    role Role

    vendorProfile VendorProfile? @relation

    accounts Account[]
    sessions Session[]
}

model VerificationToken {
    id String @id @default(uuid())

    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
